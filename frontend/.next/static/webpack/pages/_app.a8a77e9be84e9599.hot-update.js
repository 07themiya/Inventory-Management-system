"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/redux/actions.js":
/*!******************************!*\
  !*** ./src/redux/actions.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADD_ITEM: () => (/* binding */ ADD_ITEM),\n/* harmony export */   ADD_PURCHASE_LOG: () => (/* binding */ ADD_PURCHASE_LOG),\n/* harmony export */   ADD_USAGE: () => (/* binding */ ADD_USAGE),\n/* harmony export */   API_ERROR: () => (/* binding */ API_ERROR),\n/* harmony export */   DELETE_ITEM: () => (/* binding */ DELETE_ITEM),\n/* harmony export */   FETCH_ITEMS: () => (/* binding */ FETCH_ITEMS),\n/* harmony export */   FETCH_PURCHASE_LOGS: () => (/* binding */ FETCH_PURCHASE_LOGS),\n/* harmony export */   HANDLE_API_ERROR: () => (/* binding */ HANDLE_API_ERROR),\n/* harmony export */   UPDATE_ITEM: () => (/* binding */ UPDATE_ITEM),\n/* harmony export */   addItem: () => (/* binding */ addItem),\n/* harmony export */   addPurchaseLog: () => (/* binding */ addPurchaseLog),\n/* harmony export */   addUsage: () => (/* binding */ addUsage),\n/* harmony export */   deleteItem: () => (/* binding */ deleteItem),\n/* harmony export */   fetchItems: () => (/* binding */ fetchItems),\n/* harmony export */   fetchPurchaseLogs: () => (/* binding */ fetchPurchaseLogs),\n/* harmony export */   fetchUsage: () => (/* binding */ fetchUsage),\n/* harmony export */   updateItem: () => (/* binding */ updateItem)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(pages-dir-browser)/./node_modules/axios/index.js\");\n\n// Action Types\nconst ADD_ITEM = 'ADD_ITEM';\nconst UPDATE_ITEM = 'UPDATE_ITEM';\nconst DELETE_ITEM = 'DELETE_ITEM';\nconst FETCH_ITEMS = 'FETCH_ITEMS';\nconst FETCH_PURCHASE_LOGS = 'FETCH_PURCHASE_LOGS';\nconst HANDLE_API_ERROR = 'HANDLE_API_ERROR';\nconst ADD_PURCHASE_LOG = 'ADD_PURCHASE_LOG';\nconst API_ERROR = 'API_ERROR';\nconst ADD_USAGE = 'ADD_USAGE';\n// Configure Axios instance with defaults\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"http://localhost:5000/api\" || 0,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    validateStatus: function(status) {\n        return status < 500; // Don't throw for 4xx errors\n    }\n});\n// Helper function to handle API errors\nconst handleApiError = (error, dispatch, actionType)=>{\n    var _error_response, _error_response1;\n    const errorData = {\n        message: error.message,\n        status: (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status,\n        data: (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data,\n        actionType\n    };\n    console.error(\"API Error in \".concat(actionType, \":\"), errorData);\n    dispatch({\n        type: API_ERROR,\n        payload: errorData\n    });\n    return errorData;\n};\n// Action Creators\n// Add Item Action\nconst addItem = (item)=>async (dispatch)=>{\n        try {\n            if (!item.name || !item.category) {\n                throw new Error('Name and category are required');\n            }\n            const payload = {\n                name: item.name.trim(),\n                category: item.category.trim(),\n                initialStock: Math.max(0, Number(item.initialStock)) || 0,\n                purchased: Math.max(0, Number(item.purchased)) || 0,\n                used: Math.max(0, Number(item.used)) || 0\n            };\n            console.log('Adding item:', payload);\n            const response = await api.post('/inventory', payload);\n            dispatch({\n                type: ADD_ITEM,\n                payload: response.data\n            });\n            return response.data;\n        } catch (error) {\n            return handleApiError(error, dispatch, ADD_ITEM);\n        }\n    };\n// Add Usage Action\nconst addUsage = (usageData)=>async (dispatch)=>{\n        try {\n            var _usageData_itemName, _usageData_category;\n            const payload = {\n                itemName: (_usageData_itemName = usageData.itemName) === null || _usageData_itemName === void 0 ? void 0 : _usageData_itemName.trim(),\n                category: (_usageData_category = usageData.category) === null || _usageData_category === void 0 ? void 0 : _usageData_category.trim(),\n                quantityUsed: Math.max(1, Number(usageData.quantityUsed)),\n                date: usageData.date || new Date().toISOString()\n            };\n            console.log('Adding usage:', payload);\n            const response = await api.post('/usage', payload);\n            dispatch({\n                type: ADD_USAGE,\n                payload: response.data\n            });\n            return response.data;\n        } catch (error) {\n            return handleApiError(error, dispatch, ADD_USAGE);\n        }\n    };\n// Update Item Action\nconst updateItem = (id, updates)=>async (dispatch)=>{\n        try {\n            const payload = {\n                ...updates.name && {\n                    name: updates.name.trim()\n                },\n                ...updates.category && {\n                    category: updates.category.trim()\n                },\n                ...updates.initialStock && {\n                    initialStock: Math.max(0, Number(updates.initialStock))\n                },\n                ...updates.purchased && {\n                    purchased: Math.max(0, Number(updates.purchased))\n                },\n                ...updates.used && {\n                    used: Math.max(0, Number(updates.used))\n                }\n            };\n            console.log(\"Updating item \".concat(id, \":\"), payload);\n            const response = await api.put(\"/inventory/\".concat(id), payload);\n            dispatch({\n                type: UPDATE_ITEM,\n                payload: {\n                    id,\n                    updates: response.data\n                }\n            });\n            return response.data;\n        } catch (error) {\n            return handleApiError(error, dispatch, UPDATE_ITEM);\n        }\n    };\n// Delete Item Action\nconst deleteItem = (id)=>async (dispatch)=>{\n        try {\n            console.log(\"Deleting item \".concat(id));\n            await api.delete(\"/inventory/\".concat(id));\n            dispatch({\n                type: DELETE_ITEM,\n                payload: id\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            return handleApiError(error, dispatch, DELETE_ITEM);\n        }\n    };\n// Fetch Items Action\nconst fetchItems = ()=>async (dispatch)=>{\n        try {\n            console.log('Fetching items');\n            const response = await api.get('/inventory');\n            dispatch({\n                type: FETCH_ITEMS,\n                payload: response.data\n            });\n            return response.data;\n        } catch (error) {\n            return handleApiError(error, dispatch, FETCH_ITEMS);\n        }\n    };\n// Fetch Purchase Logs Action\nconst fetchPurchaseLogs = ()=>async (dispatch)=>{\n        try {\n            console.log('Fetching purchase logs');\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('http://localhost:5000/api/purchases'); // Ensure correct backend URL\n            console.log(response.data); // Log the fetched data\n            dispatch({\n                type: FETCH_PURCHASE_LOGS,\n                payload: response.data\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching purchase logs:', error.message); // Log any error during fetching\n            dispatch({\n                type: HANDLE_API_ERROR,\n                payload: error.message\n            });\n        }\n    };\n// Add Purchase Log Action\nconst addPurchaseLog = (purchaseData)=>async (dispatch)=>{\n        try {\n            var _purchaseData_itemName, _purchaseData_category, _purchaseData_supplier;\n            const payload = {\n                itemName: (_purchaseData_itemName = purchaseData.itemName) === null || _purchaseData_itemName === void 0 ? void 0 : _purchaseData_itemName.trim(),\n                category: (_purchaseData_category = purchaseData.category) === null || _purchaseData_category === void 0 ? void 0 : _purchaseData_category.trim(),\n                quantity: Math.max(1, Number(purchaseData.quantity)),\n                unitPrice: Math.max(0, Number(purchaseData.unitPrice)) || 0,\n                totalCost: Math.max(0, Number(purchaseData.quantity) * Number(purchaseData.unitPrice || 1)),\n                date: purchaseData.date || new Date().toISOString(),\n                supplier: ((_purchaseData_supplier = purchaseData.supplier) === null || _purchaseData_supplier === void 0 ? void 0 : _purchaseData_supplier.trim()) || null\n            };\n            console.log('Adding purchase:', payload);\n            const response = await api.post('/purchases', payload);\n            // Dispatch two actions:\n            // 1. Add the new purchase to the log\n            dispatch({\n                type: ADD_PURCHASE_LOG,\n                payload: response.data\n            });\n            // 2. Update the inventory item's purchased quantity\n            if (purchaseData.itemId) {\n                dispatch({\n                    type: UPDATE_ITEM,\n                    payload: {\n                        id: purchaseData.itemId,\n                        updates: {\n                            purchased: response.data.newPurchaseTotal\n                        }\n                    }\n                });\n            }\n            return response.data;\n        } catch (error) {\n            return handleApiError(error, dispatch, ADD_PURCHASE_LOG);\n        }\n    };\nconst fetchUsage = ()=>{\n    return async (dispatch)=>{\n        try {\n            const response = await fetch('http://localhost:5000/api');\n            const data = await response.json();\n            dispatch({\n                type: 'FETCH_USAGE_SUCCESS',\n                payload: data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'FETCH_USAGE_FAILURE',\n                error: error.message\n            });\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/redux/actions.js\n"));

/***/ })

});